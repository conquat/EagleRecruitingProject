ARM GAS  /tmp/ccw7Hg6D.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB247:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccw7Hg6D.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  44:Core/Src/main.c **** ADC_HandleTypeDef hadc2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** TIM_HandleTypeDef htim6;
  47:Core/Src/main.c **** TIM_HandleTypeDef htim7;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** UART_HandleTypeDef huart2;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/main.c **** void SystemClock_Config(void);
  57:Core/Src/main.c **** static void MX_GPIO_Init(void);
  58:Core/Src/main.c **** static void MX_ADC1_Init(void);
  59:Core/Src/main.c **** static void MX_ADC2_Init(void);
  60:Core/Src/main.c **** static void MX_TIM6_Init(void);
  61:Core/Src/main.c **** static void MX_TIM7_Init(void);
  62:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  68:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
  72:Core/Src/main.c ****   UNUSED(GPIO_Pin);
  73:Core/Src/main.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
  74:Core/Src/main.c ****            the HAL_GPIO_EXTI_Callback could be implemented in the user file
  75:Core/Src/main.c ****    */
  76:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (const uint8_t *)"exti\n", 5, 10);
  77:Core/Src/main.c **** }
  78:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
  81:Core/Src/main.c ****   UNUSED(htim);
  82:Core/Src/main.c ****   
  83:Core/Src/main.c ****   char tx_data[50];
  84:Core/Src/main.c ****   if (htim == &htim6) {
  85:Core/Src/main.c ****     snprintf(tx_data, 50, "htim6\n");
  86:Core/Src/main.c ****   } else if (htim == &htim7) {
  87:Core/Src/main.c ****     snprintf(tx_data, 50, "htim7\n");
  88:Core/Src/main.c ****   } else {
ARM GAS  /tmp/ccw7Hg6D.s 			page 3


  89:Core/Src/main.c ****     snprintf(tx_data, 50, "timer error: unknown timer\n");
  90:Core/Src/main.c ****   }
  91:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (const uint8_t *)tx_data, strlen(tx_data), 10);
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* NOTE : This function should not be modified, when the callback is needed,
  94:Core/Src/main.c ****             the HAL_TIM_PeriodElapsedCallback could be implemented in the user file
  95:Core/Src/main.c ****    */
  96:Core/Src/main.c **** }
  97:Core/Src/main.c **** /* USER CODE END 0 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** /**
 100:Core/Src/main.c ****   * @brief  The application entry point.
 101:Core/Src/main.c ****   * @retval int
 102:Core/Src/main.c ****   */
 103:Core/Src/main.c **** int main(void)
 104:Core/Src/main.c **** {
 105:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE END 1 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 112:Core/Src/main.c ****   HAL_Init();
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE END Init */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Configure the system clock */
 119:Core/Src/main.c ****   SystemClock_Config();
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE END SysInit */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* Initialize all configured peripherals */
 126:Core/Src/main.c ****   MX_GPIO_Init();
 127:Core/Src/main.c ****   MX_ADC1_Init();
 128:Core/Src/main.c ****   MX_ADC2_Init();
 129:Core/Src/main.c ****   MX_TIM6_Init();
 130:Core/Src/main.c ****   MX_TIM7_Init();
 131:Core/Src/main.c ****   MX_USART2_UART_Init();
 132:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 133:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim6);
 134:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim7);
 135:Core/Src/main.c ****   /* USER CODE END 2 */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* Infinite loop */
 138:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 139:Core/Src/main.c ****   while (1)
 140:Core/Src/main.c ****   {
 141:Core/Src/main.c ****     /* USER CODE END WHILE */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 144:Core/Src/main.c ****   }
 145:Core/Src/main.c ****   /* USER CODE END 3 */
ARM GAS  /tmp/ccw7Hg6D.s 			page 4


 146:Core/Src/main.c **** }
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** /**
 149:Core/Src/main.c ****   * @brief System Clock Configuration
 150:Core/Src/main.c ****   * @retval None
 151:Core/Src/main.c ****   */
 152:Core/Src/main.c **** void SystemClock_Config(void)
 153:Core/Src/main.c **** {
 154:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 155:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 158:Core/Src/main.c ****   */
 159:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 160:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 163:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 166:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 167:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 169:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 170:Core/Src/main.c ****   {
 171:Core/Src/main.c ****     Error_Handler();
 172:Core/Src/main.c ****   }
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 177:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 178:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 179:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 184:Core/Src/main.c ****   {
 185:Core/Src/main.c ****     Error_Handler();
 186:Core/Src/main.c ****   }
 187:Core/Src/main.c **** }
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** /**
 190:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 191:Core/Src/main.c ****   * @param None
 192:Core/Src/main.c ****   * @retval None
 193:Core/Src/main.c ****   */
 194:Core/Src/main.c **** static void MX_ADC1_Init(void)
 195:Core/Src/main.c **** {
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 202:Core/Src/main.c **** 
ARM GAS  /tmp/ccw7Hg6D.s 			page 5


 203:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c ****   hadc1.Instance = ADC1;
 210:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 211:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 212:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 213:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 214:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 215:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 216:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 217:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 218:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 219:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 220:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 221:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 222:Core/Src/main.c ****   {
 223:Core/Src/main.c ****     Error_Handler();
 224:Core/Src/main.c ****   }
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 227:Core/Src/main.c ****   */
 228:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 229:Core/Src/main.c ****   sConfig.Rank = 1;
 230:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 231:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 232:Core/Src/main.c ****   {
 233:Core/Src/main.c ****     Error_Handler();
 234:Core/Src/main.c ****   }
 235:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** }
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** /**
 242:Core/Src/main.c ****   * @brief ADC2 Initialization Function
 243:Core/Src/main.c ****   * @param None
 244:Core/Src/main.c ****   * @retval None
 245:Core/Src/main.c ****   */
 246:Core/Src/main.c **** static void MX_ADC2_Init(void)
 247:Core/Src/main.c **** {
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 0 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE END ADC2_Init 0 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 1 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE END ADC2_Init 1 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
ARM GAS  /tmp/ccw7Hg6D.s 			page 6


 260:Core/Src/main.c ****   */
 261:Core/Src/main.c ****   hadc2.Instance = ADC2;
 262:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 263:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 264:Core/Src/main.c ****   hadc2.Init.ScanConvMode = DISABLE;
 265:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 266:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 267:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 268:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 269:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 270:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
 271:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = DISABLE;
 272:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 273:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 274:Core/Src/main.c ****   {
 275:Core/Src/main.c ****     Error_Handler();
 276:Core/Src/main.c ****   }
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 279:Core/Src/main.c ****   */
 280:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 281:Core/Src/main.c ****   sConfig.Rank = 1;
 282:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 283:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 284:Core/Src/main.c ****   {
 285:Core/Src/main.c ****     Error_Handler();
 286:Core/Src/main.c ****   }
 287:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 2 */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /* USER CODE END ADC2_Init 2 */
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** }
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** /**
 294:Core/Src/main.c ****   * @brief TIM6 Initialization Function
 295:Core/Src/main.c ****   * @param None
 296:Core/Src/main.c ****   * @retval None
 297:Core/Src/main.c ****   */
 298:Core/Src/main.c **** static void MX_TIM6_Init(void)
 299:Core/Src/main.c **** {
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /* USER CODE BEGIN TIM6_Init 0 */
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   /* USER CODE END TIM6_Init 0 */
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* USER CODE BEGIN TIM6_Init 1 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* USER CODE END TIM6_Init 1 */
 310:Core/Src/main.c ****   htim6.Instance = TIM6;
 311:Core/Src/main.c ****   htim6.Init.Prescaler = 15999;
 312:Core/Src/main.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 313:Core/Src/main.c ****   htim6.Init.Period = 200;
 314:Core/Src/main.c ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 315:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 316:Core/Src/main.c ****   {
ARM GAS  /tmp/ccw7Hg6D.s 			page 7


 317:Core/Src/main.c ****     Error_Handler();
 318:Core/Src/main.c ****   }
 319:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 320:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 321:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 322:Core/Src/main.c ****   {
 323:Core/Src/main.c ****     Error_Handler();
 324:Core/Src/main.c ****   }
 325:Core/Src/main.c ****   /* USER CODE BEGIN TIM6_Init 2 */
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /* USER CODE END TIM6_Init 2 */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** }
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** /**
 332:Core/Src/main.c ****   * @brief TIM7 Initialization Function
 333:Core/Src/main.c ****   * @param None
 334:Core/Src/main.c ****   * @retval None
 335:Core/Src/main.c ****   */
 336:Core/Src/main.c **** static void MX_TIM7_Init(void)
 337:Core/Src/main.c **** {
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 0 */
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /* USER CODE END TIM7_Init 0 */
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 1 */
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE END TIM7_Init 1 */
 348:Core/Src/main.c ****   htim7.Instance = TIM7;
 349:Core/Src/main.c ****   htim7.Init.Prescaler = 15999;
 350:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 351:Core/Src/main.c ****   htim7.Init.Period = 350;
 352:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 353:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 354:Core/Src/main.c ****   {
 355:Core/Src/main.c ****     Error_Handler();
 356:Core/Src/main.c ****   }
 357:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 358:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 359:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 360:Core/Src/main.c ****   {
 361:Core/Src/main.c ****     Error_Handler();
 362:Core/Src/main.c ****   }
 363:Core/Src/main.c ****   /* USER CODE BEGIN TIM7_Init 2 */
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /* USER CODE END TIM7_Init 2 */
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** }
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** /**
 370:Core/Src/main.c ****   * @brief USART2 Initialization Function
 371:Core/Src/main.c ****   * @param None
 372:Core/Src/main.c ****   * @retval None
 373:Core/Src/main.c ****   */
ARM GAS  /tmp/ccw7Hg6D.s 			page 8


 374:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 375:Core/Src/main.c **** {
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 384:Core/Src/main.c ****   huart2.Instance = USART2;
 385:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 386:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 387:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 388:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 389:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 390:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 391:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 392:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 393:Core/Src/main.c ****   {
 394:Core/Src/main.c ****     Error_Handler();
 395:Core/Src/main.c ****   }
 396:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 399:Core/Src/main.c **** 
 400:Core/Src/main.c **** }
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** /**
 403:Core/Src/main.c ****   * @brief GPIO Initialization Function
 404:Core/Src/main.c ****   * @param None
 405:Core/Src/main.c ****   * @retval None
 406:Core/Src/main.c ****   */
 407:Core/Src/main.c **** static void MX_GPIO_Init(void)
 408:Core/Src/main.c **** {
  28              		.loc 1 408 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38 0002 8AB0     		sub	sp, sp, #40
  39              		.cfi_def_cfa_offset 56
 409:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 409 3 view .LVU1
  41              		.loc 1 409 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0594     		str	r4, [sp, #20]
  44 0008 0694     		str	r4, [sp, #24]
  45 000a 0794     		str	r4, [sp, #28]
  46 000c 0894     		str	r4, [sp, #32]
  47 000e 0994     		str	r4, [sp, #36]
 410:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
ARM GAS  /tmp/ccw7Hg6D.s 			page 9


 411:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 412:Core/Src/main.c **** 
 413:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 414:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  48              		.loc 1 414 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 414 3 view .LVU4
  51 0010 0194     		str	r4, [sp, #4]
  52              		.loc 1 414 3 view .LVU5
  53 0012 264B     		ldr	r3, .L3
  54 0014 1A6B     		ldr	r2, [r3, #48]
  55 0016 42F00402 		orr	r2, r2, #4
  56 001a 1A63     		str	r2, [r3, #48]
  57              		.loc 1 414 3 view .LVU6
  58 001c 1A6B     		ldr	r2, [r3, #48]
  59 001e 02F00402 		and	r2, r2, #4
  60 0022 0192     		str	r2, [sp, #4]
  61              		.loc 1 414 3 view .LVU7
  62 0024 019A     		ldr	r2, [sp, #4]
  63              	.LBE4:
  64              		.loc 1 414 3 view .LVU8
 415:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  65              		.loc 1 415 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 415 3 view .LVU10
  68 0026 0294     		str	r4, [sp, #8]
  69              		.loc 1 415 3 view .LVU11
  70 0028 1A6B     		ldr	r2, [r3, #48]
  71 002a 42F08002 		orr	r2, r2, #128
  72 002e 1A63     		str	r2, [r3, #48]
  73              		.loc 1 415 3 view .LVU12
  74 0030 1A6B     		ldr	r2, [r3, #48]
  75 0032 02F08002 		and	r2, r2, #128
  76 0036 0292     		str	r2, [sp, #8]
  77              		.loc 1 415 3 view .LVU13
  78 0038 029A     		ldr	r2, [sp, #8]
  79              	.LBE5:
  80              		.loc 1 415 3 view .LVU14
 416:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  81              		.loc 1 416 3 view .LVU15
  82              	.LBB6:
  83              		.loc 1 416 3 view .LVU16
  84 003a 0394     		str	r4, [sp, #12]
  85              		.loc 1 416 3 view .LVU17
  86 003c 1A6B     		ldr	r2, [r3, #48]
  87 003e 42F00102 		orr	r2, r2, #1
  88 0042 1A63     		str	r2, [r3, #48]
  89              		.loc 1 416 3 view .LVU18
  90 0044 1A6B     		ldr	r2, [r3, #48]
  91 0046 02F00102 		and	r2, r2, #1
  92 004a 0392     		str	r2, [sp, #12]
  93              		.loc 1 416 3 view .LVU19
  94 004c 039A     		ldr	r2, [sp, #12]
  95              	.LBE6:
  96              		.loc 1 416 3 view .LVU20
 417:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  97              		.loc 1 417 3 view .LVU21
ARM GAS  /tmp/ccw7Hg6D.s 			page 10


  98              	.LBB7:
  99              		.loc 1 417 3 view .LVU22
 100 004e 0494     		str	r4, [sp, #16]
 101              		.loc 1 417 3 view .LVU23
 102 0050 1A6B     		ldr	r2, [r3, #48]
 103 0052 42F00202 		orr	r2, r2, #2
 104 0056 1A63     		str	r2, [r3, #48]
 105              		.loc 1 417 3 view .LVU24
 106 0058 1B6B     		ldr	r3, [r3, #48]
 107 005a 03F00203 		and	r3, r3, #2
 108 005e 0493     		str	r3, [sp, #16]
 109              		.loc 1 417 3 view .LVU25
 110 0060 049B     		ldr	r3, [sp, #16]
 111              	.LBE7:
 112              		.loc 1 417 3 view .LVU26
 418:Core/Src/main.c **** 
 419:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 420:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, LD2_Pin|GPIO_PIN_6, GPIO_PIN_RESET);
 113              		.loc 1 420 3 view .LVU27
 114 0062 134E     		ldr	r6, .L3+4
 115 0064 2246     		mov	r2, r4
 116 0066 6021     		movs	r1, #96
 117 0068 3046     		mov	r0, r6
 118 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 119              	.LVL0:
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 423:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 120              		.loc 1 423 3 view .LVU28
 121              		.loc 1 423 23 is_stmt 0 view .LVU29
 122 006e 4FF40053 		mov	r3, #8192
 123 0072 0593     		str	r3, [sp, #20]
 424:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 124              		.loc 1 424 3 is_stmt 1 view .LVU30
 125              		.loc 1 424 24 is_stmt 0 view .LVU31
 126 0074 4FF40413 		mov	r3, #2162688
 127 0078 0693     		str	r3, [sp, #24]
 425:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 128              		.loc 1 425 3 is_stmt 1 view .LVU32
 129              		.loc 1 425 24 is_stmt 0 view .LVU33
 130 007a 0125     		movs	r5, #1
 131 007c 0795     		str	r5, [sp, #28]
 426:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 132              		.loc 1 426 3 is_stmt 1 view .LVU34
 133 007e 05A9     		add	r1, sp, #20
 134 0080 0C48     		ldr	r0, .L3+8
 135 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 136              	.LVL1:
 427:Core/Src/main.c **** 
 428:Core/Src/main.c ****   /*Configure GPIO pins : LD2_Pin PA6 */
 429:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin|GPIO_PIN_6;
 137              		.loc 1 429 3 view .LVU35
 138              		.loc 1 429 23 is_stmt 0 view .LVU36
 139 0086 6023     		movs	r3, #96
 140 0088 0593     		str	r3, [sp, #20]
 430:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 141              		.loc 1 430 3 is_stmt 1 view .LVU37
ARM GAS  /tmp/ccw7Hg6D.s 			page 11


 142              		.loc 1 430 24 is_stmt 0 view .LVU38
 143 008a 0695     		str	r5, [sp, #24]
 431:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 144              		.loc 1 431 3 is_stmt 1 view .LVU39
 145              		.loc 1 431 24 is_stmt 0 view .LVU40
 146 008c 0794     		str	r4, [sp, #28]
 432:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 147              		.loc 1 432 3 is_stmt 1 view .LVU41
 148              		.loc 1 432 25 is_stmt 0 view .LVU42
 149 008e 0894     		str	r4, [sp, #32]
 433:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 150              		.loc 1 433 3 is_stmt 1 view .LVU43
 151 0090 05A9     		add	r1, sp, #20
 152 0092 3046     		mov	r0, r6
 153 0094 FFF7FEFF 		bl	HAL_GPIO_Init
 154              	.LVL2:
 434:Core/Src/main.c **** 
 435:Core/Src/main.c ****   /* EXTI interrupt init*/
 436:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 1);
 155              		.loc 1 436 3 view .LVU44
 156 0098 2A46     		mov	r2, r5
 157 009a 2146     		mov	r1, r4
 158 009c 2820     		movs	r0, #40
 159 009e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 160              	.LVL3:
 437:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 161              		.loc 1 437 3 view .LVU45
 162 00a2 2820     		movs	r0, #40
 163 00a4 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 164              	.LVL4:
 438:Core/Src/main.c **** 
 439:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 440:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 441:Core/Src/main.c **** }
 165              		.loc 1 441 1 is_stmt 0 view .LVU46
 166 00a8 0AB0     		add	sp, sp, #40
 167              		.cfi_def_cfa_offset 16
 168              		@ sp needed
 169 00aa 70BD     		pop	{r4, r5, r6, pc}
 170              	.L4:
 171              		.align	2
 172              	.L3:
 173 00ac 00380240 		.word	1073887232
 174 00b0 00000240 		.word	1073872896
 175 00b4 00080240 		.word	1073874944
 176              		.cfi_endproc
 177              	.LFE247:
 179              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 180              		.align	2
 181              	.LC0:
 182 0000 65787469 		.ascii	"exti\012\000"
 182      0A00
 183              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 184              		.align	1
 185              		.global	HAL_GPIO_EXTI_Callback
 186              		.syntax unified
 187              		.thumb
ARM GAS  /tmp/ccw7Hg6D.s 			page 12


 188              		.thumb_func
 190              	HAL_GPIO_EXTI_Callback:
 191              	.LVL5:
 192              	.LFB238:
  70:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 193              		.loc 1 70 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
  70:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 197              		.loc 1 70 1 is_stmt 0 view .LVU48
 198 0000 08B5     		push	{r3, lr}
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 3, -8
 201              		.cfi_offset 14, -4
  72:Core/Src/main.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 202              		.loc 1 72 3 is_stmt 1 view .LVU49
  76:Core/Src/main.c **** }
 203              		.loc 1 76 3 view .LVU50
 204 0002 0A23     		movs	r3, #10
 205 0004 0522     		movs	r2, #5
 206 0006 0249     		ldr	r1, .L7
 207 0008 0248     		ldr	r0, .L7+4
 208              	.LVL6:
  76:Core/Src/main.c **** }
 209              		.loc 1 76 3 is_stmt 0 view .LVU51
 210 000a FFF7FEFF 		bl	HAL_UART_Transmit
 211              	.LVL7:
  77:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 212              		.loc 1 77 1 view .LVU52
 213 000e 08BD     		pop	{r3, pc}
 214              	.L8:
 215              		.align	2
 216              	.L7:
 217 0010 00000000 		.word	.LC0
 218 0014 00000000 		.word	huart2
 219              		.cfi_endproc
 220              	.LFE238:
 222              		.section	.rodata.HAL_TIM_PeriodElapsedCallback.str1.4,"aMS",%progbits,1
 223              		.align	2
 224              	.LC1:
 225 0000 6874696D 		.ascii	"htim6\012\000"
 225      360A00
 226 0007 00       		.align	2
 227              	.LC2:
 228 0008 6874696D 		.ascii	"htim7\012\000"
 228      370A00
 229 000f 00       		.align	2
 230              	.LC3:
 231 0010 74696D65 		.ascii	"timer error: unknown timer\012\000"
 231      72206572 
 231      726F723A 
 231      20756E6B 
 231      6E6F776E 
 232              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 233              		.align	1
 234              		.global	HAL_TIM_PeriodElapsedCallback
ARM GAS  /tmp/ccw7Hg6D.s 			page 13


 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 239              	HAL_TIM_PeriodElapsedCallback:
 240              	.LVL8:
 241              	.LFB239:
  79:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 242              		.loc 1 79 1 is_stmt 1 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 56
 245              		@ frame_needed = 0, uses_anonymous_args = 0
  79:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 246              		.loc 1 79 1 is_stmt 0 view .LVU54
 247 0000 10B5     		push	{r4, lr}
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 4, -8
 250              		.cfi_offset 14, -4
 251 0002 8EB0     		sub	sp, sp, #56
 252              		.cfi_def_cfa_offset 64
  81:Core/Src/main.c ****   
 253              		.loc 1 81 3 is_stmt 1 view .LVU55
  83:Core/Src/main.c ****   if (htim == &htim6) {
 254              		.loc 1 83 3 view .LVU56
  84:Core/Src/main.c ****     snprintf(tx_data, 50, "htim6\n");
 255              		.loc 1 84 3 view .LVU57
  84:Core/Src/main.c ****     snprintf(tx_data, 50, "htim6\n");
 256              		.loc 1 84 6 is_stmt 0 view .LVU58
 257 0004 174B     		ldr	r3, .L16
 258 0006 9842     		cmp	r0, r3
 259 0008 17D0     		beq	.L14
  86:Core/Src/main.c ****     snprintf(tx_data, 50, "htim7\n");
 260              		.loc 1 86 10 is_stmt 1 view .LVU59
  86:Core/Src/main.c ****     snprintf(tx_data, 50, "htim7\n");
 261              		.loc 1 86 13 is_stmt 0 view .LVU60
 262 000a 174B     		ldr	r3, .L16+4
 263 000c 9842     		cmp	r0, r3
 264 000e 1ED0     		beq	.L15
  89:Core/Src/main.c ****   }
 265              		.loc 1 89 5 is_stmt 1 view .LVU61
 266 0010 0DF1040C 		add	ip, sp, #4
 267 0014 154C     		ldr	r4, .L16+8
 268 0016 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 269              	.LVL9:
  89:Core/Src/main.c ****   }
 270              		.loc 1 89 5 is_stmt 0 view .LVU62
 271 0018 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 272 001c 94E80700 		ldm	r4, {r0, r1, r2}
 273 0020 8CE80700 		stm	ip, {r0, r1, r2}
 274              	.L11:
  91:Core/Src/main.c **** 
 275              		.loc 1 91 3 is_stmt 1 view .LVU63
  91:Core/Src/main.c **** 
 276              		.loc 1 91 56 is_stmt 0 view .LVU64
 277 0024 01A8     		add	r0, sp, #4
 278 0026 FFF7FEFF 		bl	strlen
 279              	.LVL10:
  91:Core/Src/main.c **** 
ARM GAS  /tmp/ccw7Hg6D.s 			page 14


 280              		.loc 1 91 3 view .LVU65
 281 002a 0A23     		movs	r3, #10
 282 002c 82B2     		uxth	r2, r0
 283 002e 01A9     		add	r1, sp, #4
 284 0030 0F48     		ldr	r0, .L16+12
 285 0032 FFF7FEFF 		bl	HAL_UART_Transmit
 286              	.LVL11:
  96:Core/Src/main.c **** /* USER CODE END 0 */
 287              		.loc 1 96 1 view .LVU66
 288 0036 0EB0     		add	sp, sp, #56
 289              		.cfi_remember_state
 290              		.cfi_def_cfa_offset 8
 291              		@ sp needed
 292 0038 10BD     		pop	{r4, pc}
 293              	.LVL12:
 294              	.L14:
 295              		.cfi_restore_state
  85:Core/Src/main.c ****   } else if (htim == &htim7) {
 296              		.loc 1 85 5 is_stmt 1 view .LVU67
 297 003a 0E4B     		ldr	r3, .L16+16
 298 003c 93E80300 		ldm	r3, {r0, r1}
 299              	.LVL13:
  85:Core/Src/main.c ****   } else if (htim == &htim7) {
 300              		.loc 1 85 5 is_stmt 0 view .LVU68
 301 0040 0190     		str	r0, [sp, #4]
 302 0042 ADF80810 		strh	r1, [sp, #8]	@ movhi
 303 0046 090C     		lsrs	r1, r1, #16
 304 0048 8DF80A10 		strb	r1, [sp, #10]
 305 004c EAE7     		b	.L11
 306              	.LVL14:
 307              	.L15:
  87:Core/Src/main.c ****   } else {
 308              		.loc 1 87 5 is_stmt 1 view .LVU69
 309 004e 0A4B     		ldr	r3, .L16+20
 310 0050 93E80300 		ldm	r3, {r0, r1}
 311              	.LVL15:
  87:Core/Src/main.c ****   } else {
 312              		.loc 1 87 5 is_stmt 0 view .LVU70
 313 0054 0190     		str	r0, [sp, #4]
 314 0056 ADF80810 		strh	r1, [sp, #8]	@ movhi
 315 005a 090C     		lsrs	r1, r1, #16
 316 005c 8DF80A10 		strb	r1, [sp, #10]
 317 0060 E0E7     		b	.L11
 318              	.L17:
 319 0062 00BF     		.align	2
 320              	.L16:
 321 0064 00000000 		.word	htim6
 322 0068 00000000 		.word	htim7
 323 006c 10000000 		.word	.LC3
 324 0070 00000000 		.word	huart2
 325 0074 00000000 		.word	.LC1
 326 0078 08000000 		.word	.LC2
 327              		.cfi_endproc
 328              	.LFE239:
 330              		.section	.text.Error_Handler,"ax",%progbits
 331              		.align	1
 332              		.global	Error_Handler
ARM GAS  /tmp/ccw7Hg6D.s 			page 15


 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 337              	Error_Handler:
 338              	.LFB248:
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 444:Core/Src/main.c **** 
 445:Core/Src/main.c **** /* USER CODE END 4 */
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** /**
 448:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 449:Core/Src/main.c ****   * @retval None
 450:Core/Src/main.c ****   */
 451:Core/Src/main.c **** void Error_Handler(void)
 452:Core/Src/main.c **** {
 339              		.loc 1 452 1 is_stmt 1 view -0
 340              		.cfi_startproc
 341              		@ Volatile: function does not return.
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              		@ link register save eliminated.
 453:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 454:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 455:Core/Src/main.c ****   __disable_irq();
 345              		.loc 1 455 3 view .LVU72
 346              	.LBB8:
 347              	.LBI8:
 348              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  /tmp/ccw7Hg6D.s 			page 16


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccw7Hg6D.s 			page 17


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 349              		.loc 2 140 27 view .LVU73
 350              	.LBB9:
ARM GAS  /tmp/ccw7Hg6D.s 			page 18


 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 351              		.loc 2 142 3 view .LVU74
 352              		.syntax unified
 353              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 354 0000 72B6     		cpsid i
 355              	@ 0 "" 2
 356              		.thumb
 357              		.syntax unified
 358              	.L19:
 359              	.LBE9:
 360              	.LBE8:
 456:Core/Src/main.c ****   while (1)
 361              		.loc 1 456 3 discriminator 1 view .LVU75
 457:Core/Src/main.c ****   {
 458:Core/Src/main.c ****   }
 362              		.loc 1 458 3 discriminator 1 view .LVU76
 456:Core/Src/main.c ****   while (1)
 363              		.loc 1 456 9 discriminator 1 view .LVU77
 364 0002 FEE7     		b	.L19
 365              		.cfi_endproc
 366              	.LFE248:
 368              		.section	.text.MX_ADC1_Init,"ax",%progbits
 369              		.align	1
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 374              	MX_ADC1_Init:
 375              	.LFB242:
 195:Core/Src/main.c **** 
 376              		.loc 1 195 1 view -0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 16
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380 0000 00B5     		push	{lr}
 381              		.cfi_def_cfa_offset 4
 382              		.cfi_offset 14, -4
 383 0002 85B0     		sub	sp, sp, #20
 384              		.cfi_def_cfa_offset 24
 201:Core/Src/main.c **** 
 385              		.loc 1 201 3 view .LVU79
 201:Core/Src/main.c **** 
 386              		.loc 1 201 26 is_stmt 0 view .LVU80
 387 0004 0023     		movs	r3, #0
 388 0006 0093     		str	r3, [sp]
 389 0008 0193     		str	r3, [sp, #4]
 390 000a 0293     		str	r3, [sp, #8]
 391 000c 0393     		str	r3, [sp, #12]
 209:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 392              		.loc 1 209 3 is_stmt 1 view .LVU81
 209:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 393              		.loc 1 209 18 is_stmt 0 view .LVU82
 394 000e 1348     		ldr	r0, .L26
 395 0010 134A     		ldr	r2, .L26+4
 396 0012 0260     		str	r2, [r0]
 210:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 397              		.loc 1 210 3 is_stmt 1 view .LVU83
ARM GAS  /tmp/ccw7Hg6D.s 			page 19


 210:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 398              		.loc 1 210 29 is_stmt 0 view .LVU84
 399 0014 4360     		str	r3, [r0, #4]
 211:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 400              		.loc 1 211 3 is_stmt 1 view .LVU85
 211:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 401              		.loc 1 211 25 is_stmt 0 view .LVU86
 402 0016 8360     		str	r3, [r0, #8]
 212:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 403              		.loc 1 212 3 is_stmt 1 view .LVU87
 212:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 404              		.loc 1 212 27 is_stmt 0 view .LVU88
 405 0018 0361     		str	r3, [r0, #16]
 213:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 406              		.loc 1 213 3 is_stmt 1 view .LVU89
 213:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 407              		.loc 1 213 33 is_stmt 0 view .LVU90
 408 001a 0376     		strb	r3, [r0, #24]
 214:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 409              		.loc 1 214 3 is_stmt 1 view .LVU91
 214:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 410              		.loc 1 214 36 is_stmt 0 view .LVU92
 411 001c 80F82030 		strb	r3, [r0, #32]
 215:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 412              		.loc 1 215 3 is_stmt 1 view .LVU93
 215:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 413              		.loc 1 215 35 is_stmt 0 view .LVU94
 414 0020 C362     		str	r3, [r0, #44]
 216:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 415              		.loc 1 216 3 is_stmt 1 view .LVU95
 216:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 416              		.loc 1 216 31 is_stmt 0 view .LVU96
 417 0022 104A     		ldr	r2, .L26+8
 418 0024 8262     		str	r2, [r0, #40]
 217:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 419              		.loc 1 217 3 is_stmt 1 view .LVU97
 217:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 420              		.loc 1 217 24 is_stmt 0 view .LVU98
 421 0026 C360     		str	r3, [r0, #12]
 218:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 422              		.loc 1 218 3 is_stmt 1 view .LVU99
 218:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 423              		.loc 1 218 30 is_stmt 0 view .LVU100
 424 0028 0122     		movs	r2, #1
 425 002a C261     		str	r2, [r0, #28]
 219:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 426              		.loc 1 219 3 is_stmt 1 view .LVU101
 219:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 427              		.loc 1 219 36 is_stmt 0 view .LVU102
 428 002c 80F83030 		strb	r3, [r0, #48]
 220:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 429              		.loc 1 220 3 is_stmt 1 view .LVU103
 220:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 430              		.loc 1 220 27 is_stmt 0 view .LVU104
 431 0030 4261     		str	r2, [r0, #20]
 221:Core/Src/main.c ****   {
 432              		.loc 1 221 3 is_stmt 1 view .LVU105
ARM GAS  /tmp/ccw7Hg6D.s 			page 20


 221:Core/Src/main.c ****   {
 433              		.loc 1 221 7 is_stmt 0 view .LVU106
 434 0032 FFF7FEFF 		bl	HAL_ADC_Init
 435              	.LVL16:
 221:Core/Src/main.c ****   {
 436              		.loc 1 221 6 view .LVU107
 437 0036 60B9     		cbnz	r0, .L24
 228:Core/Src/main.c ****   sConfig.Rank = 1;
 438              		.loc 1 228 3 is_stmt 1 view .LVU108
 228:Core/Src/main.c ****   sConfig.Rank = 1;
 439              		.loc 1 228 19 is_stmt 0 view .LVU109
 440 0038 0023     		movs	r3, #0
 441 003a 0093     		str	r3, [sp]
 229:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 442              		.loc 1 229 3 is_stmt 1 view .LVU110
 229:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 443              		.loc 1 229 16 is_stmt 0 view .LVU111
 444 003c 0122     		movs	r2, #1
 445 003e 0192     		str	r2, [sp, #4]
 230:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 446              		.loc 1 230 3 is_stmt 1 view .LVU112
 230:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 447              		.loc 1 230 24 is_stmt 0 view .LVU113
 448 0040 0293     		str	r3, [sp, #8]
 231:Core/Src/main.c ****   {
 449              		.loc 1 231 3 is_stmt 1 view .LVU114
 231:Core/Src/main.c ****   {
 450              		.loc 1 231 7 is_stmt 0 view .LVU115
 451 0042 6946     		mov	r1, sp
 452 0044 0548     		ldr	r0, .L26
 453 0046 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 454              	.LVL17:
 231:Core/Src/main.c ****   {
 455              		.loc 1 231 6 view .LVU116
 456 004a 20B9     		cbnz	r0, .L25
 239:Core/Src/main.c **** 
 457              		.loc 1 239 1 view .LVU117
 458 004c 05B0     		add	sp, sp, #20
 459              		.cfi_remember_state
 460              		.cfi_def_cfa_offset 4
 461              		@ sp needed
 462 004e 5DF804FB 		ldr	pc, [sp], #4
 463              	.L24:
 464              		.cfi_restore_state
 223:Core/Src/main.c ****   }
 465              		.loc 1 223 5 is_stmt 1 view .LVU118
 466 0052 FFF7FEFF 		bl	Error_Handler
 467              	.LVL18:
 468              	.L25:
 233:Core/Src/main.c ****   }
 469              		.loc 1 233 5 view .LVU119
 470 0056 FFF7FEFF 		bl	Error_Handler
 471              	.LVL19:
 472              	.L27:
 473 005a 00BF     		.align	2
 474              	.L26:
 475 005c 00000000 		.word	hadc1
ARM GAS  /tmp/ccw7Hg6D.s 			page 21


 476 0060 00200140 		.word	1073815552
 477 0064 0100000F 		.word	251658241
 478              		.cfi_endproc
 479              	.LFE242:
 481              		.section	.text.MX_ADC2_Init,"ax",%progbits
 482              		.align	1
 483              		.syntax unified
 484              		.thumb
 485              		.thumb_func
 487              	MX_ADC2_Init:
 488              	.LFB243:
 247:Core/Src/main.c **** 
 489              		.loc 1 247 1 view -0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 16
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493 0000 00B5     		push	{lr}
 494              		.cfi_def_cfa_offset 4
 495              		.cfi_offset 14, -4
 496 0002 85B0     		sub	sp, sp, #20
 497              		.cfi_def_cfa_offset 24
 253:Core/Src/main.c **** 
 498              		.loc 1 253 3 view .LVU121
 253:Core/Src/main.c **** 
 499              		.loc 1 253 26 is_stmt 0 view .LVU122
 500 0004 0023     		movs	r3, #0
 501 0006 0093     		str	r3, [sp]
 502 0008 0193     		str	r3, [sp, #4]
 503 000a 0293     		str	r3, [sp, #8]
 504 000c 0393     		str	r3, [sp, #12]
 261:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 505              		.loc 1 261 3 is_stmt 1 view .LVU123
 261:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 506              		.loc 1 261 18 is_stmt 0 view .LVU124
 507 000e 1348     		ldr	r0, .L34
 508 0010 134A     		ldr	r2, .L34+4
 509 0012 0260     		str	r2, [r0]
 262:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 510              		.loc 1 262 3 is_stmt 1 view .LVU125
 262:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 511              		.loc 1 262 29 is_stmt 0 view .LVU126
 512 0014 4360     		str	r3, [r0, #4]
 263:Core/Src/main.c ****   hadc2.Init.ScanConvMode = DISABLE;
 513              		.loc 1 263 3 is_stmt 1 view .LVU127
 263:Core/Src/main.c ****   hadc2.Init.ScanConvMode = DISABLE;
 514              		.loc 1 263 25 is_stmt 0 view .LVU128
 515 0016 8360     		str	r3, [r0, #8]
 264:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 516              		.loc 1 264 3 is_stmt 1 view .LVU129
 264:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 517              		.loc 1 264 27 is_stmt 0 view .LVU130
 518 0018 0361     		str	r3, [r0, #16]
 265:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 519              		.loc 1 265 3 is_stmt 1 view .LVU131
 265:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 520              		.loc 1 265 33 is_stmt 0 view .LVU132
 521 001a 0376     		strb	r3, [r0, #24]
ARM GAS  /tmp/ccw7Hg6D.s 			page 22


 266:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 522              		.loc 1 266 3 is_stmt 1 view .LVU133
 266:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 523              		.loc 1 266 36 is_stmt 0 view .LVU134
 524 001c 80F82030 		strb	r3, [r0, #32]
 267:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 525              		.loc 1 267 3 is_stmt 1 view .LVU135
 267:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 526              		.loc 1 267 35 is_stmt 0 view .LVU136
 527 0020 C362     		str	r3, [r0, #44]
 268:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 528              		.loc 1 268 3 is_stmt 1 view .LVU137
 268:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 529              		.loc 1 268 31 is_stmt 0 view .LVU138
 530 0022 104A     		ldr	r2, .L34+8
 531 0024 8262     		str	r2, [r0, #40]
 269:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
 532              		.loc 1 269 3 is_stmt 1 view .LVU139
 269:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
 533              		.loc 1 269 24 is_stmt 0 view .LVU140
 534 0026 C360     		str	r3, [r0, #12]
 270:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = DISABLE;
 535              		.loc 1 270 3 is_stmt 1 view .LVU141
 270:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = DISABLE;
 536              		.loc 1 270 30 is_stmt 0 view .LVU142
 537 0028 0122     		movs	r2, #1
 538 002a C261     		str	r2, [r0, #28]
 271:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 539              		.loc 1 271 3 is_stmt 1 view .LVU143
 271:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 540              		.loc 1 271 36 is_stmt 0 view .LVU144
 541 002c 80F83030 		strb	r3, [r0, #48]
 272:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 542              		.loc 1 272 3 is_stmt 1 view .LVU145
 272:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 543              		.loc 1 272 27 is_stmt 0 view .LVU146
 544 0030 4261     		str	r2, [r0, #20]
 273:Core/Src/main.c ****   {
 545              		.loc 1 273 3 is_stmt 1 view .LVU147
 273:Core/Src/main.c ****   {
 546              		.loc 1 273 7 is_stmt 0 view .LVU148
 547 0032 FFF7FEFF 		bl	HAL_ADC_Init
 548              	.LVL20:
 273:Core/Src/main.c ****   {
 549              		.loc 1 273 6 view .LVU149
 550 0036 60B9     		cbnz	r0, .L32
 280:Core/Src/main.c ****   sConfig.Rank = 1;
 551              		.loc 1 280 3 is_stmt 1 view .LVU150
 280:Core/Src/main.c ****   sConfig.Rank = 1;
 552              		.loc 1 280 19 is_stmt 0 view .LVU151
 553 0038 0123     		movs	r3, #1
 554 003a 0093     		str	r3, [sp]
 281:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 555              		.loc 1 281 3 is_stmt 1 view .LVU152
 281:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 556              		.loc 1 281 16 is_stmt 0 view .LVU153
 557 003c 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccw7Hg6D.s 			page 23


 282:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 558              		.loc 1 282 3 is_stmt 1 view .LVU154
 282:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 559              		.loc 1 282 24 is_stmt 0 view .LVU155
 560 003e 0023     		movs	r3, #0
 561 0040 0293     		str	r3, [sp, #8]
 283:Core/Src/main.c ****   {
 562              		.loc 1 283 3 is_stmt 1 view .LVU156
 283:Core/Src/main.c ****   {
 563              		.loc 1 283 7 is_stmt 0 view .LVU157
 564 0042 6946     		mov	r1, sp
 565 0044 0548     		ldr	r0, .L34
 566 0046 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 567              	.LVL21:
 283:Core/Src/main.c ****   {
 568              		.loc 1 283 6 view .LVU158
 569 004a 20B9     		cbnz	r0, .L33
 291:Core/Src/main.c **** 
 570              		.loc 1 291 1 view .LVU159
 571 004c 05B0     		add	sp, sp, #20
 572              		.cfi_remember_state
 573              		.cfi_def_cfa_offset 4
 574              		@ sp needed
 575 004e 5DF804FB 		ldr	pc, [sp], #4
 576              	.L32:
 577              		.cfi_restore_state
 275:Core/Src/main.c ****   }
 578              		.loc 1 275 5 is_stmt 1 view .LVU160
 579 0052 FFF7FEFF 		bl	Error_Handler
 580              	.LVL22:
 581              	.L33:
 285:Core/Src/main.c ****   }
 582              		.loc 1 285 5 view .LVU161
 583 0056 FFF7FEFF 		bl	Error_Handler
 584              	.LVL23:
 585              	.L35:
 586 005a 00BF     		.align	2
 587              	.L34:
 588 005c 00000000 		.word	hadc2
 589 0060 00210140 		.word	1073815808
 590 0064 0100000F 		.word	251658241
 591              		.cfi_endproc
 592              	.LFE243:
 594              		.section	.text.MX_TIM6_Init,"ax",%progbits
 595              		.align	1
 596              		.syntax unified
 597              		.thumb
 598              		.thumb_func
 600              	MX_TIM6_Init:
 601              	.LFB244:
 299:Core/Src/main.c **** 
 602              		.loc 1 299 1 view -0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 8
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 606 0000 00B5     		push	{lr}
 607              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccw7Hg6D.s 			page 24


 608              		.cfi_offset 14, -4
 609 0002 83B0     		sub	sp, sp, #12
 610              		.cfi_def_cfa_offset 16
 305:Core/Src/main.c **** 
 611              		.loc 1 305 3 view .LVU163
 305:Core/Src/main.c **** 
 612              		.loc 1 305 27 is_stmt 0 view .LVU164
 613 0004 0023     		movs	r3, #0
 614 0006 0093     		str	r3, [sp]
 615 0008 0193     		str	r3, [sp, #4]
 310:Core/Src/main.c ****   htim6.Init.Prescaler = 15999;
 616              		.loc 1 310 3 is_stmt 1 view .LVU165
 310:Core/Src/main.c ****   htim6.Init.Prescaler = 15999;
 617              		.loc 1 310 18 is_stmt 0 view .LVU166
 618 000a 0E48     		ldr	r0, .L42
 619 000c 0E4A     		ldr	r2, .L42+4
 620 000e 0260     		str	r2, [r0]
 311:Core/Src/main.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 621              		.loc 1 311 3 is_stmt 1 view .LVU167
 311:Core/Src/main.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 622              		.loc 1 311 24 is_stmt 0 view .LVU168
 623 0010 43F67F62 		movw	r2, #15999
 624 0014 4260     		str	r2, [r0, #4]
 312:Core/Src/main.c ****   htim6.Init.Period = 200;
 625              		.loc 1 312 3 is_stmt 1 view .LVU169
 312:Core/Src/main.c ****   htim6.Init.Period = 200;
 626              		.loc 1 312 26 is_stmt 0 view .LVU170
 627 0016 8360     		str	r3, [r0, #8]
 313:Core/Src/main.c ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 628              		.loc 1 313 3 is_stmt 1 view .LVU171
 313:Core/Src/main.c ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 629              		.loc 1 313 21 is_stmt 0 view .LVU172
 630 0018 C822     		movs	r2, #200
 631 001a C260     		str	r2, [r0, #12]
 314:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 632              		.loc 1 314 3 is_stmt 1 view .LVU173
 314:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 633              		.loc 1 314 32 is_stmt 0 view .LVU174
 634 001c 8361     		str	r3, [r0, #24]
 315:Core/Src/main.c ****   {
 635              		.loc 1 315 3 is_stmt 1 view .LVU175
 315:Core/Src/main.c ****   {
 636              		.loc 1 315 7 is_stmt 0 view .LVU176
 637 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 638              	.LVL24:
 315:Core/Src/main.c ****   {
 639              		.loc 1 315 6 view .LVU177
 640 0022 50B9     		cbnz	r0, .L40
 319:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 641              		.loc 1 319 3 is_stmt 1 view .LVU178
 319:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 642              		.loc 1 319 37 is_stmt 0 view .LVU179
 643 0024 0023     		movs	r3, #0
 644 0026 0093     		str	r3, [sp]
 320:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 645              		.loc 1 320 3 is_stmt 1 view .LVU180
 320:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
ARM GAS  /tmp/ccw7Hg6D.s 			page 25


 646              		.loc 1 320 33 is_stmt 0 view .LVU181
 647 0028 0193     		str	r3, [sp, #4]
 321:Core/Src/main.c ****   {
 648              		.loc 1 321 3 is_stmt 1 view .LVU182
 321:Core/Src/main.c ****   {
 649              		.loc 1 321 7 is_stmt 0 view .LVU183
 650 002a 6946     		mov	r1, sp
 651 002c 0548     		ldr	r0, .L42
 652 002e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 653              	.LVL25:
 321:Core/Src/main.c ****   {
 654              		.loc 1 321 6 view .LVU184
 655 0032 20B9     		cbnz	r0, .L41
 329:Core/Src/main.c **** 
 656              		.loc 1 329 1 view .LVU185
 657 0034 03B0     		add	sp, sp, #12
 658              		.cfi_remember_state
 659              		.cfi_def_cfa_offset 4
 660              		@ sp needed
 661 0036 5DF804FB 		ldr	pc, [sp], #4
 662              	.L40:
 663              		.cfi_restore_state
 317:Core/Src/main.c ****   }
 664              		.loc 1 317 5 is_stmt 1 view .LVU186
 665 003a FFF7FEFF 		bl	Error_Handler
 666              	.LVL26:
 667              	.L41:
 323:Core/Src/main.c ****   }
 668              		.loc 1 323 5 view .LVU187
 669 003e FFF7FEFF 		bl	Error_Handler
 670              	.LVL27:
 671              	.L43:
 672 0042 00BF     		.align	2
 673              	.L42:
 674 0044 00000000 		.word	htim6
 675 0048 00100040 		.word	1073745920
 676              		.cfi_endproc
 677              	.LFE244:
 679              		.section	.text.MX_TIM7_Init,"ax",%progbits
 680              		.align	1
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 685              	MX_TIM7_Init:
 686              	.LFB245:
 337:Core/Src/main.c **** 
 687              		.loc 1 337 1 view -0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 8
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691 0000 00B5     		push	{lr}
 692              		.cfi_def_cfa_offset 4
 693              		.cfi_offset 14, -4
 694 0002 83B0     		sub	sp, sp, #12
 695              		.cfi_def_cfa_offset 16
 343:Core/Src/main.c **** 
 696              		.loc 1 343 3 view .LVU189
ARM GAS  /tmp/ccw7Hg6D.s 			page 26


 343:Core/Src/main.c **** 
 697              		.loc 1 343 27 is_stmt 0 view .LVU190
 698 0004 0023     		movs	r3, #0
 699 0006 0093     		str	r3, [sp]
 700 0008 0193     		str	r3, [sp, #4]
 348:Core/Src/main.c ****   htim7.Init.Prescaler = 15999;
 701              		.loc 1 348 3 is_stmt 1 view .LVU191
 348:Core/Src/main.c ****   htim7.Init.Prescaler = 15999;
 702              		.loc 1 348 18 is_stmt 0 view .LVU192
 703 000a 0E48     		ldr	r0, .L50
 704 000c 0E4A     		ldr	r2, .L50+4
 705 000e 0260     		str	r2, [r0]
 349:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 706              		.loc 1 349 3 is_stmt 1 view .LVU193
 349:Core/Src/main.c ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 707              		.loc 1 349 24 is_stmt 0 view .LVU194
 708 0010 43F67F62 		movw	r2, #15999
 709 0014 4260     		str	r2, [r0, #4]
 350:Core/Src/main.c ****   htim7.Init.Period = 350;
 710              		.loc 1 350 3 is_stmt 1 view .LVU195
 350:Core/Src/main.c ****   htim7.Init.Period = 350;
 711              		.loc 1 350 26 is_stmt 0 view .LVU196
 712 0016 8360     		str	r3, [r0, #8]
 351:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 713              		.loc 1 351 3 is_stmt 1 view .LVU197
 351:Core/Src/main.c ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 714              		.loc 1 351 21 is_stmt 0 view .LVU198
 715 0018 4FF4AF72 		mov	r2, #350
 716 001c C260     		str	r2, [r0, #12]
 352:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 717              		.loc 1 352 3 is_stmt 1 view .LVU199
 352:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 718              		.loc 1 352 32 is_stmt 0 view .LVU200
 719 001e 8361     		str	r3, [r0, #24]
 353:Core/Src/main.c ****   {
 720              		.loc 1 353 3 is_stmt 1 view .LVU201
 353:Core/Src/main.c ****   {
 721              		.loc 1 353 7 is_stmt 0 view .LVU202
 722 0020 FFF7FEFF 		bl	HAL_TIM_Base_Init
 723              	.LVL28:
 353:Core/Src/main.c ****   {
 724              		.loc 1 353 6 view .LVU203
 725 0024 50B9     		cbnz	r0, .L48
 357:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 726              		.loc 1 357 3 is_stmt 1 view .LVU204
 357:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 727              		.loc 1 357 37 is_stmt 0 view .LVU205
 728 0026 0023     		movs	r3, #0
 729 0028 0093     		str	r3, [sp]
 358:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 730              		.loc 1 358 3 is_stmt 1 view .LVU206
 358:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 731              		.loc 1 358 33 is_stmt 0 view .LVU207
 732 002a 0193     		str	r3, [sp, #4]
 359:Core/Src/main.c ****   {
 733              		.loc 1 359 3 is_stmt 1 view .LVU208
 359:Core/Src/main.c ****   {
ARM GAS  /tmp/ccw7Hg6D.s 			page 27


 734              		.loc 1 359 7 is_stmt 0 view .LVU209
 735 002c 6946     		mov	r1, sp
 736 002e 0548     		ldr	r0, .L50
 737 0030 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 738              	.LVL29:
 359:Core/Src/main.c ****   {
 739              		.loc 1 359 6 view .LVU210
 740 0034 20B9     		cbnz	r0, .L49
 367:Core/Src/main.c **** 
 741              		.loc 1 367 1 view .LVU211
 742 0036 03B0     		add	sp, sp, #12
 743              		.cfi_remember_state
 744              		.cfi_def_cfa_offset 4
 745              		@ sp needed
 746 0038 5DF804FB 		ldr	pc, [sp], #4
 747              	.L48:
 748              		.cfi_restore_state
 355:Core/Src/main.c ****   }
 749              		.loc 1 355 5 is_stmt 1 view .LVU212
 750 003c FFF7FEFF 		bl	Error_Handler
 751              	.LVL30:
 752              	.L49:
 361:Core/Src/main.c ****   }
 753              		.loc 1 361 5 view .LVU213
 754 0040 FFF7FEFF 		bl	Error_Handler
 755              	.LVL31:
 756              	.L51:
 757              		.align	2
 758              	.L50:
 759 0044 00000000 		.word	htim7
 760 0048 00140040 		.word	1073746944
 761              		.cfi_endproc
 762              	.LFE245:
 764              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 765              		.align	1
 766              		.syntax unified
 767              		.thumb
 768              		.thumb_func
 770              	MX_USART2_UART_Init:
 771              	.LFB246:
 375:Core/Src/main.c **** 
 772              		.loc 1 375 1 view -0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776 0000 08B5     		push	{r3, lr}
 777              		.cfi_def_cfa_offset 8
 778              		.cfi_offset 3, -8
 779              		.cfi_offset 14, -4
 384:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 780              		.loc 1 384 3 view .LVU215
 384:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 781              		.loc 1 384 19 is_stmt 0 view .LVU216
 782 0002 0A48     		ldr	r0, .L56
 783 0004 0A4B     		ldr	r3, .L56+4
 784 0006 0360     		str	r3, [r0]
 385:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
ARM GAS  /tmp/ccw7Hg6D.s 			page 28


 785              		.loc 1 385 3 is_stmt 1 view .LVU217
 385:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 786              		.loc 1 385 24 is_stmt 0 view .LVU218
 787 0008 4FF41653 		mov	r3, #9600
 788 000c 4360     		str	r3, [r0, #4]
 386:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 789              		.loc 1 386 3 is_stmt 1 view .LVU219
 386:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 790              		.loc 1 386 26 is_stmt 0 view .LVU220
 791 000e 0023     		movs	r3, #0
 792 0010 8360     		str	r3, [r0, #8]
 387:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 793              		.loc 1 387 3 is_stmt 1 view .LVU221
 387:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 794              		.loc 1 387 24 is_stmt 0 view .LVU222
 795 0012 C360     		str	r3, [r0, #12]
 388:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 796              		.loc 1 388 3 is_stmt 1 view .LVU223
 388:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 797              		.loc 1 388 22 is_stmt 0 view .LVU224
 798 0014 0361     		str	r3, [r0, #16]
 389:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 799              		.loc 1 389 3 is_stmt 1 view .LVU225
 389:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800              		.loc 1 389 20 is_stmt 0 view .LVU226
 801 0016 0C22     		movs	r2, #12
 802 0018 4261     		str	r2, [r0, #20]
 390:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 803              		.loc 1 390 3 is_stmt 1 view .LVU227
 390:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 804              		.loc 1 390 25 is_stmt 0 view .LVU228
 805 001a 8361     		str	r3, [r0, #24]
 391:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 806              		.loc 1 391 3 is_stmt 1 view .LVU229
 391:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 807              		.loc 1 391 28 is_stmt 0 view .LVU230
 808 001c C361     		str	r3, [r0, #28]
 392:Core/Src/main.c ****   {
 809              		.loc 1 392 3 is_stmt 1 view .LVU231
 392:Core/Src/main.c ****   {
 810              		.loc 1 392 7 is_stmt 0 view .LVU232
 811 001e FFF7FEFF 		bl	HAL_UART_Init
 812              	.LVL32:
 392:Core/Src/main.c ****   {
 813              		.loc 1 392 6 view .LVU233
 814 0022 00B9     		cbnz	r0, .L55
 400:Core/Src/main.c **** 
 815              		.loc 1 400 1 view .LVU234
 816 0024 08BD     		pop	{r3, pc}
 817              	.L55:
 394:Core/Src/main.c ****   }
 818              		.loc 1 394 5 is_stmt 1 view .LVU235
 819 0026 FFF7FEFF 		bl	Error_Handler
 820              	.LVL33:
 821              	.L57:
 822 002a 00BF     		.align	2
 823              	.L56:
ARM GAS  /tmp/ccw7Hg6D.s 			page 29


 824 002c 00000000 		.word	huart2
 825 0030 00440040 		.word	1073759232
 826              		.cfi_endproc
 827              	.LFE246:
 829              		.section	.text.SystemClock_Config,"ax",%progbits
 830              		.align	1
 831              		.global	SystemClock_Config
 832              		.syntax unified
 833              		.thumb
 834              		.thumb_func
 836              	SystemClock_Config:
 837              	.LFB241:
 153:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 838              		.loc 1 153 1 view -0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 80
 841              		@ frame_needed = 0, uses_anonymous_args = 0
 842 0000 00B5     		push	{lr}
 843              		.cfi_def_cfa_offset 4
 844              		.cfi_offset 14, -4
 845 0002 95B0     		sub	sp, sp, #84
 846              		.cfi_def_cfa_offset 88
 154:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 847              		.loc 1 154 3 view .LVU237
 154:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 848              		.loc 1 154 22 is_stmt 0 view .LVU238
 849 0004 3422     		movs	r2, #52
 850 0006 0021     		movs	r1, #0
 851 0008 07A8     		add	r0, sp, #28
 852 000a FFF7FEFF 		bl	memset
 853              	.LVL34:
 155:Core/Src/main.c **** 
 854              		.loc 1 155 3 is_stmt 1 view .LVU239
 155:Core/Src/main.c **** 
 855              		.loc 1 155 22 is_stmt 0 view .LVU240
 856 000e 0023     		movs	r3, #0
 857 0010 0293     		str	r3, [sp, #8]
 858 0012 0393     		str	r3, [sp, #12]
 859 0014 0493     		str	r3, [sp, #16]
 860 0016 0593     		str	r3, [sp, #20]
 861 0018 0693     		str	r3, [sp, #24]
 159:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 862              		.loc 1 159 3 is_stmt 1 view .LVU241
 863              	.LBB10:
 159:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 864              		.loc 1 159 3 view .LVU242
 865 001a 0093     		str	r3, [sp]
 159:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 866              		.loc 1 159 3 view .LVU243
 867 001c 1A4A     		ldr	r2, .L64
 868 001e 116C     		ldr	r1, [r2, #64]
 869 0020 41F08051 		orr	r1, r1, #268435456
 870 0024 1164     		str	r1, [r2, #64]
 159:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 871              		.loc 1 159 3 view .LVU244
 872 0026 126C     		ldr	r2, [r2, #64]
 873 0028 02F08052 		and	r2, r2, #268435456
ARM GAS  /tmp/ccw7Hg6D.s 			page 30


 874 002c 0092     		str	r2, [sp]
 159:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 875              		.loc 1 159 3 view .LVU245
 876 002e 009A     		ldr	r2, [sp]
 877              	.LBE10:
 159:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 878              		.loc 1 159 3 view .LVU246
 160:Core/Src/main.c **** 
 879              		.loc 1 160 3 view .LVU247
 880              	.LBB11:
 160:Core/Src/main.c **** 
 881              		.loc 1 160 3 view .LVU248
 882 0030 0193     		str	r3, [sp, #4]
 160:Core/Src/main.c **** 
 883              		.loc 1 160 3 view .LVU249
 884 0032 1649     		ldr	r1, .L64+4
 885 0034 0A68     		ldr	r2, [r1]
 886 0036 22F44042 		bic	r2, r2, #49152
 887 003a 42F48042 		orr	r2, r2, #16384
 888 003e 0A60     		str	r2, [r1]
 160:Core/Src/main.c **** 
 889              		.loc 1 160 3 view .LVU250
 890 0040 0A68     		ldr	r2, [r1]
 891 0042 02F44042 		and	r2, r2, #49152
 892 0046 0192     		str	r2, [sp, #4]
 160:Core/Src/main.c **** 
 893              		.loc 1 160 3 view .LVU251
 894 0048 019A     		ldr	r2, [sp, #4]
 895              	.LBE11:
 160:Core/Src/main.c **** 
 896              		.loc 1 160 3 view .LVU252
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 897              		.loc 1 165 3 view .LVU253
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 898              		.loc 1 165 36 is_stmt 0 view .LVU254
 899 004a 0222     		movs	r2, #2
 900 004c 0792     		str	r2, [sp, #28]
 166:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 901              		.loc 1 166 3 is_stmt 1 view .LVU255
 166:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 902              		.loc 1 166 30 is_stmt 0 view .LVU256
 903 004e 0122     		movs	r2, #1
 904 0050 0A92     		str	r2, [sp, #40]
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 905              		.loc 1 167 3 is_stmt 1 view .LVU257
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 906              		.loc 1 167 41 is_stmt 0 view .LVU258
 907 0052 1022     		movs	r2, #16
 908 0054 0B92     		str	r2, [sp, #44]
 168:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 909              		.loc 1 168 3 is_stmt 1 view .LVU259
 168:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 910              		.loc 1 168 34 is_stmt 0 view .LVU260
 911 0056 0D93     		str	r3, [sp, #52]
 169:Core/Src/main.c ****   {
 912              		.loc 1 169 3 is_stmt 1 view .LVU261
 169:Core/Src/main.c ****   {
ARM GAS  /tmp/ccw7Hg6D.s 			page 31


 913              		.loc 1 169 7 is_stmt 0 view .LVU262
 914 0058 07A8     		add	r0, sp, #28
 915 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 916              	.LVL35:
 169:Core/Src/main.c ****   {
 917              		.loc 1 169 6 view .LVU263
 918 005e 78B9     		cbnz	r0, .L62
 176:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 919              		.loc 1 176 3 is_stmt 1 view .LVU264
 176:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 920              		.loc 1 176 31 is_stmt 0 view .LVU265
 921 0060 0F23     		movs	r3, #15
 922 0062 0293     		str	r3, [sp, #8]
 178:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 923              		.loc 1 178 3 is_stmt 1 view .LVU266
 178:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 924              		.loc 1 178 34 is_stmt 0 view .LVU267
 925 0064 0021     		movs	r1, #0
 926 0066 0391     		str	r1, [sp, #12]
 179:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 927              		.loc 1 179 3 is_stmt 1 view .LVU268
 179:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 928              		.loc 1 179 35 is_stmt 0 view .LVU269
 929 0068 0491     		str	r1, [sp, #16]
 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 930              		.loc 1 180 3 is_stmt 1 view .LVU270
 180:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 931              		.loc 1 180 36 is_stmt 0 view .LVU271
 932 006a 4FF48053 		mov	r3, #4096
 933 006e 0593     		str	r3, [sp, #20]
 181:Core/Src/main.c **** 
 934              		.loc 1 181 3 is_stmt 1 view .LVU272
 181:Core/Src/main.c **** 
 935              		.loc 1 181 36 is_stmt 0 view .LVU273
 936 0070 0691     		str	r1, [sp, #24]
 183:Core/Src/main.c ****   {
 937              		.loc 1 183 3 is_stmt 1 view .LVU274
 183:Core/Src/main.c ****   {
 938              		.loc 1 183 7 is_stmt 0 view .LVU275
 939 0072 02A8     		add	r0, sp, #8
 940 0074 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 941              	.LVL36:
 183:Core/Src/main.c ****   {
 942              		.loc 1 183 6 view .LVU276
 943 0078 20B9     		cbnz	r0, .L63
 187:Core/Src/main.c **** 
 944              		.loc 1 187 1 view .LVU277
 945 007a 15B0     		add	sp, sp, #84
 946              		.cfi_remember_state
 947              		.cfi_def_cfa_offset 4
 948              		@ sp needed
 949 007c 5DF804FB 		ldr	pc, [sp], #4
 950              	.L62:
 951              		.cfi_restore_state
 171:Core/Src/main.c ****   }
 952              		.loc 1 171 5 is_stmt 1 view .LVU278
 953 0080 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccw7Hg6D.s 			page 32


 954              	.LVL37:
 955              	.L63:
 185:Core/Src/main.c ****   }
 956              		.loc 1 185 5 view .LVU279
 957 0084 FFF7FEFF 		bl	Error_Handler
 958              	.LVL38:
 959              	.L65:
 960              		.align	2
 961              	.L64:
 962 0088 00380240 		.word	1073887232
 963 008c 00700040 		.word	1073770496
 964              		.cfi_endproc
 965              	.LFE241:
 967              		.section	.text.main,"ax",%progbits
 968              		.align	1
 969              		.global	main
 970              		.syntax unified
 971              		.thumb
 972              		.thumb_func
 974              	main:
 975              	.LFB240:
 104:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 976              		.loc 1 104 1 view -0
 977              		.cfi_startproc
 978              		@ Volatile: function does not return.
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981 0000 08B5     		push	{r3, lr}
 982              		.cfi_def_cfa_offset 8
 983              		.cfi_offset 3, -8
 984              		.cfi_offset 14, -4
 112:Core/Src/main.c **** 
 985              		.loc 1 112 3 view .LVU281
 986 0002 FFF7FEFF 		bl	HAL_Init
 987              	.LVL39:
 119:Core/Src/main.c **** 
 988              		.loc 1 119 3 view .LVU282
 989 0006 FFF7FEFF 		bl	SystemClock_Config
 990              	.LVL40:
 126:Core/Src/main.c ****   MX_ADC1_Init();
 991              		.loc 1 126 3 view .LVU283
 992 000a FFF7FEFF 		bl	MX_GPIO_Init
 993              	.LVL41:
 127:Core/Src/main.c ****   MX_ADC2_Init();
 994              		.loc 1 127 3 view .LVU284
 995 000e FFF7FEFF 		bl	MX_ADC1_Init
 996              	.LVL42:
 128:Core/Src/main.c ****   MX_TIM6_Init();
 997              		.loc 1 128 3 view .LVU285
 998 0012 FFF7FEFF 		bl	MX_ADC2_Init
 999              	.LVL43:
 129:Core/Src/main.c ****   MX_TIM7_Init();
 1000              		.loc 1 129 3 view .LVU286
 1001 0016 FFF7FEFF 		bl	MX_TIM6_Init
 1002              	.LVL44:
 130:Core/Src/main.c ****   MX_USART2_UART_Init();
 1003              		.loc 1 130 3 view .LVU287
ARM GAS  /tmp/ccw7Hg6D.s 			page 33


 1004 001a FFF7FEFF 		bl	MX_TIM7_Init
 1005              	.LVL45:
 131:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1006              		.loc 1 131 3 view .LVU288
 1007 001e FFF7FEFF 		bl	MX_USART2_UART_Init
 1008              	.LVL46:
 133:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim7);
 1009              		.loc 1 133 3 view .LVU289
 1010 0022 0348     		ldr	r0, .L69
 1011 0024 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1012              	.LVL47:
 134:Core/Src/main.c ****   /* USER CODE END 2 */
 1013              		.loc 1 134 3 view .LVU290
 1014 0028 0248     		ldr	r0, .L69+4
 1015 002a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1016              	.LVL48:
 1017              	.L67:
 139:Core/Src/main.c ****   {
 1018              		.loc 1 139 3 discriminator 1 view .LVU291
 144:Core/Src/main.c ****   /* USER CODE END 3 */
 1019              		.loc 1 144 3 discriminator 1 view .LVU292
 139:Core/Src/main.c ****   {
 1020              		.loc 1 139 9 discriminator 1 view .LVU293
 1021 002e FEE7     		b	.L67
 1022              	.L70:
 1023              		.align	2
 1024              	.L69:
 1025 0030 00000000 		.word	htim6
 1026 0034 00000000 		.word	htim7
 1027              		.cfi_endproc
 1028              	.LFE240:
 1030              		.global	huart2
 1031              		.section	.bss.huart2,"aw",%nobits
 1032              		.align	2
 1035              	huart2:
 1036 0000 00000000 		.space	68
 1036      00000000 
 1036      00000000 
 1036      00000000 
 1036      00000000 
 1037              		.global	htim7
 1038              		.section	.bss.htim7,"aw",%nobits
 1039              		.align	2
 1042              	htim7:
 1043 0000 00000000 		.space	72
 1043      00000000 
 1043      00000000 
 1043      00000000 
 1043      00000000 
 1044              		.global	htim6
 1045              		.section	.bss.htim6,"aw",%nobits
 1046              		.align	2
 1049              	htim6:
 1050 0000 00000000 		.space	72
 1050      00000000 
 1050      00000000 
 1050      00000000 
ARM GAS  /tmp/ccw7Hg6D.s 			page 34


 1050      00000000 
 1051              		.global	hadc2
 1052              		.section	.bss.hadc2,"aw",%nobits
 1053              		.align	2
 1056              	hadc2:
 1057 0000 00000000 		.space	72
 1057      00000000 
 1057      00000000 
 1057      00000000 
 1057      00000000 
 1058              		.global	hadc1
 1059              		.section	.bss.hadc1,"aw",%nobits
 1060              		.align	2
 1063              	hadc1:
 1064 0000 00000000 		.space	72
 1064      00000000 
 1064      00000000 
 1064      00000000 
 1064      00000000 
 1065              		.text
 1066              	.Letext0:
 1067              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1068              		.file 4 "/home/alessandro/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 1069              		.file 5 "/home/alessandro/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 1070              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1071              		.file 7 "/home/alessandro/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 1072              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1073              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1074              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1075              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1076              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1077              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1078              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1079              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1080              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1081              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1082              		.file 18 "/home/alessandro/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/a
 1083              		.file 19 "/home/alessandro/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/a
 1084              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1085              		.file 21 "<built-in>"
ARM GAS  /tmp/ccw7Hg6D.s 			page 35


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccw7Hg6D.s:21     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccw7Hg6D.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccw7Hg6D.s:173    .text.MX_GPIO_Init:000000ac $d
     /tmp/ccw7Hg6D.s:180    .rodata.HAL_GPIO_EXTI_Callback.str1.4:00000000 $d
     /tmp/ccw7Hg6D.s:184    .text.HAL_GPIO_EXTI_Callback:00000000 $t
     /tmp/ccw7Hg6D.s:190    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
     /tmp/ccw7Hg6D.s:217    .text.HAL_GPIO_EXTI_Callback:00000010 $d
     /tmp/ccw7Hg6D.s:1035   .bss.huart2:00000000 huart2
     /tmp/ccw7Hg6D.s:223    .rodata.HAL_TIM_PeriodElapsedCallback.str1.4:00000000 $d
     /tmp/ccw7Hg6D.s:233    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
     /tmp/ccw7Hg6D.s:239    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccw7Hg6D.s:321    .text.HAL_TIM_PeriodElapsedCallback:00000064 $d
     /tmp/ccw7Hg6D.s:1049   .bss.htim6:00000000 htim6
     /tmp/ccw7Hg6D.s:1042   .bss.htim7:00000000 htim7
     /tmp/ccw7Hg6D.s:331    .text.Error_Handler:00000000 $t
     /tmp/ccw7Hg6D.s:337    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccw7Hg6D.s:369    .text.MX_ADC1_Init:00000000 $t
     /tmp/ccw7Hg6D.s:374    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
     /tmp/ccw7Hg6D.s:475    .text.MX_ADC1_Init:0000005c $d
     /tmp/ccw7Hg6D.s:1063   .bss.hadc1:00000000 hadc1
     /tmp/ccw7Hg6D.s:482    .text.MX_ADC2_Init:00000000 $t
     /tmp/ccw7Hg6D.s:487    .text.MX_ADC2_Init:00000000 MX_ADC2_Init
     /tmp/ccw7Hg6D.s:588    .text.MX_ADC2_Init:0000005c $d
     /tmp/ccw7Hg6D.s:1056   .bss.hadc2:00000000 hadc2
     /tmp/ccw7Hg6D.s:595    .text.MX_TIM6_Init:00000000 $t
     /tmp/ccw7Hg6D.s:600    .text.MX_TIM6_Init:00000000 MX_TIM6_Init
     /tmp/ccw7Hg6D.s:674    .text.MX_TIM6_Init:00000044 $d
     /tmp/ccw7Hg6D.s:680    .text.MX_TIM7_Init:00000000 $t
     /tmp/ccw7Hg6D.s:685    .text.MX_TIM7_Init:00000000 MX_TIM7_Init
     /tmp/ccw7Hg6D.s:759    .text.MX_TIM7_Init:00000044 $d
     /tmp/ccw7Hg6D.s:765    .text.MX_USART2_UART_Init:00000000 $t
     /tmp/ccw7Hg6D.s:770    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/ccw7Hg6D.s:824    .text.MX_USART2_UART_Init:0000002c $d
     /tmp/ccw7Hg6D.s:830    .text.SystemClock_Config:00000000 $t
     /tmp/ccw7Hg6D.s:836    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccw7Hg6D.s:962    .text.SystemClock_Config:00000088 $d
     /tmp/ccw7Hg6D.s:968    .text.main:00000000 $t
     /tmp/ccw7Hg6D.s:974    .text.main:00000000 main
     /tmp/ccw7Hg6D.s:1025   .text.main:00000030 $d
     /tmp/ccw7Hg6D.s:1032   .bss.huart2:00000000 $d
     /tmp/ccw7Hg6D.s:1039   .bss.htim7:00000000 $d
     /tmp/ccw7Hg6D.s:1046   .bss.htim6:00000000 $d
     /tmp/ccw7Hg6D.s:1053   .bss.hadc2:00000000 $d
     /tmp/ccw7Hg6D.s:1060   .bss.hadc1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Transmit
strlen
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
ARM GAS  /tmp/ccw7Hg6D.s 			page 36


HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
